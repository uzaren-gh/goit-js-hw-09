{"mappings":"gfAAA,IAiBIA,EAAcC,EAAaC,EAjB/BC,EAAAC,EAAA,S,aAGA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAOP,IAAMQ,EAAOC,SAASC,cAAc,QAC9BC,EAASF,SAASC,cAAc,YAEtCE,QAAQC,IAAI,UAAWF,GAEvB,IAAMG,EAAgB,CACpBf,SAAU,gBACVgB,aAAa,EACbC,cAAc,EACdC,QAAS,KAOXT,EAAKU,iBAAiB,UACtB,SAAsBC,GACpBA,EAAMC,iBACNT,EAAOU,UAAW,EAClB,IAAgCC,EAAAH,EAAMI,cAA9BC,EAAwBF,EAAxBtB,MAAOyB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAErBjC,EAAekC,OAAOH,EAAMI,OAC5BlC,EAAciC,OAAOF,EAAKG,OAC1BjC,EAAgBgC,OAAOD,EAAOE,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKlC,EAAekC,GAAK,EACvC/B,EAAc+B,EAAGpC,GACdqC,MAAK,SAAAC,G,IAAGhC,EAAQgC,EAARhC,SAAUC,EAAK+B,EAAL/B,MAEjBJ,EAAAoC,OAAOC,QACL,uBAAwCC,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,MAC5Cc,E,IAGLqB,OAAM,SAAAJ,G,IAAGhC,EAAQgC,EAARhC,SAAUC,EAAK+B,EAAL/B,MAElBJ,EAAAoC,OAAOI,QACL,sBAAqCF,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,MAC3Cc,E,IAINrB,GAAgBC,EAElBa,YAAW,WACTI,EAAOU,UAAW,C,GACjB5B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nlet inputedDelay, inputedStep, inputedAmount;\n\nconst form = document.querySelector('form');\nconst submiT = document.querySelector('#sbmtbtn');\n\nconsole.log('submiT:', submiT);\n\nconst notifyOptions = {\n  position: 'center-center',\n  closeButton: false,\n  clickToClose: false,\n  timeout: 5000,\n};\n\n// Notiflix.Notify.init({\n//   closeButton: true,\n// });\n\nform.addEventListener('submit', handleSubmit);\nfunction handleSubmit(event) {\n  event.preventDefault();\n  submiT.disabled = true;\n  const { delay, step, amount } = event.currentTarget;\n\n  inputedDelay = Number(delay.value);\n  inputedStep = Number(step.value);\n  inputedAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputedAmount; i += 1) {\n    createPromise(i, inputedDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          notifyOptions\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          notifyOptions\n        );\n      });\n\n    inputedDelay += inputedStep;\n  }\n  setTimeout(() => {\n    submiT.disabled = false;\n  }, inputedDelay);\n}\n"],"names":["$ce04d3a99e08e73b$var$inputedDelay","$ce04d3a99e08e73b$var$inputedStep","$ce04d3a99e08e73b$var$inputedAmount","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submiT","console","log","$ce04d3a99e08e73b$var$notifyOptions","closeButton","clickToClose","timeout","addEventListener","event","preventDefault","disabled","_currentTarget","currentTarget","delay1","step","amount","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.d2022fa9.js.map"}