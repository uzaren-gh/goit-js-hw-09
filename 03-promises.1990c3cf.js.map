{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKb,IAAIQ,EAAcC,EAAaC,EAElBC,SAASC,cAAc,QAM/BC,iBAAiB,UACtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQf,MAAAgB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cACtCX,EAAeY,OAAOJ,EAAMK,OAC5BZ,EAAcW,OAAOH,EAAKI,OAC1BX,EAAgBU,OAAOF,EAAOG,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKZ,EAAeY,GAAK,EACvCxB,EAAcwB,EAAGd,GACde,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,OAClDJ,EAAA8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAW,CAC5DD,SAAQ,gBACV6B,aAAa,EACbC,cAAc,EACdC,QAAS,KACT,IAEHC,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClBwB,QAAQC,IAAI,sBAAoB1B,QAAiBC,OACjDJ,EAAA8B,OAAOM,QAAQ,sBAAoBjC,QAAeC,MAAW,CAC3DD,SAAU,gBACV6B,aAAa,EACbC,cAAc,EACdC,QAAS,KACT,IAGNtB,GAAgBC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nlet inputedDelay, inputedStep, inputedAmount;\n\nconst form = document.querySelector('form');\n\n// Notiflix.Notify.init({\n//   closeButton: true,\n// });\n\nform.addEventListener('submit', handleSubmit);\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  inputedDelay = Number(delay.value);\n  inputedStep = Number(step.value);\n  inputedAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputedAmount; i += 1) {\n    createPromise(i, inputedDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'center-center',\n          closeButton: false,\n          clickToClose: false,\n          timeout: 5000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          position: 'center-center',\n          closeButton: false,\n          clickToClose: false,\n          timeout: 5000,\n        });\n      });\n\n    inputedDelay += inputedStep;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$inputedDelay","$47d4ff9957288465$var$inputedStep","$47d4ff9957288465$var$inputedAmount","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","Number","value","i","then","console","log","Notify","success","closeButton","clickToClose","timeout","catch","failure"],"version":3,"file":"03-promises.1990c3cf.js.map"}