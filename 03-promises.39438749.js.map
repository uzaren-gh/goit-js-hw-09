{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKb,IAAIQ,EAAcC,EAAaC,EAE/B,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAASF,SAASC,cAAc,YAEtCE,QAAQC,IAAI,UAAWF,GAEvB,MAAMG,EAAgB,CACpBlB,SAAU,gBACVmB,aAAa,EACbC,cAAc,EACdC,QAAS,KAOXT,EAAKU,iBAAiB,UACtB,SAAsBC,GACpBA,EAAMC,iBACNT,EAAOU,UAAW,EAClB,MAAQxB,MAAAyB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,cAEtCpB,EAAeqB,OAAOJ,EAAMK,OAC5BrB,EAAcoB,OAAOH,EAAKI,OAC1BpB,EAAgBmB,OAAOF,EAAOG,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKrB,EAAeqB,GAAK,EACvCjC,EAAciC,EAAGvB,GACdwB,MAAK,EAACjC,SAAEA,EAAQC,MAAEA,MAEjBJ,EAAAqC,OAAOC,QACL,uBAAqBnC,QAAiBC,MAAWiB,EAC/C,IAGLkB,OAAM,EAACpC,SAAEA,EAAQC,MAAEA,MAElBJ,EAAAqC,OAAOG,QACL,sBAAoBrC,QAAiBC,MAAWiB,EAC9C,IAIRT,GAAgBC,EAG+BF,YAAtC,KACTO,EAAOU,UAAW,CAAK,GACtBhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nlet inputedDelay, inputedStep, inputedAmount;\n\nconst form = document.querySelector('form');\nconst submiT = document.querySelector('#sbmtbtn');\n\nconsole.log('submiT:', submiT);\n\nconst notifyOptions = {\n  position: 'center-center',\n  closeButton: false,\n  clickToClose: false,\n  timeout: 5000,\n};\n\n// Notiflix.Notify.init({\n//   closeButton: true,\n// });\n\nform.addEventListener('submit', handleSubmit);\nfunction handleSubmit(event) {\n  event.preventDefault();\n  submiT.disabled = true;\n  const { delay, step, amount } = event.currentTarget;\n\n  inputedDelay = Number(delay.value);\n  inputedStep = Number(step.value);\n  inputedAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputedAmount; i += 1) {\n    createPromise(i, inputedDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          notifyOptions\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          notifyOptions\n        );\n      });\n\n    inputedDelay += inputedStep;\n  }\n  // event.currentTarget.reset(); //дополнительная очистка формы после выполнения промисов\n  setTimeout(() => {\n    submiT.disabled = false; //кнопка запуска активизируется вновь только после выполнения промисов\n  }, inputedDelay);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$inputedDelay","$47d4ff9957288465$var$inputedStep","$47d4ff9957288465$var$inputedAmount","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submiT","console","log","$47d4ff9957288465$var$notifyOptions","closeButton","clickToClose","timeout","addEventListener","event","preventDefault","disabled","delay1","step","amount","currentTarget","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.39438749.js.map"}